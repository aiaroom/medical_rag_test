import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.vector_database import MedicalVectorDB

def analyze_drug_relevance():
    """–ê–Ω–∞–ª–∏–∑ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–π –±–æ–ª–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø"""
    
    print("\n–ê–ù–ê–õ–ò–ó –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò –î–õ–Ø '–ì–û–õ–û–í–ù–ê–Ø –ë–û–õ–¨'")
    print("=" * 60)
    
    db = MedicalVectorDB()
    
    relevant_drugs = []
    search_terms = ['–≥–æ–ª–æ–≤–Ω–∞—è', '–º–∏–≥—Ä–µ–Ω—å', '–±–æ–ª—å'] 
    
    for drug in db.drugs_data:
        indications_text = " ".join(drug['–ø–æ–∫–∞–∑–∞–Ω–∏—è']).lower()
        
        if any(term in indications_text for term in search_terms):
            relevant_drugs.append({
                '–Ω–∞–∑–≤–∞–Ω–∏–µ': drug['–Ω–∞–∑–≤–∞–Ω–∏–µ'],
                '–ø–æ–∫–∞–∑–∞–Ω–∏—è': drug['–ø–æ–∫–∞–∑–∞–Ω–∏—è'],
                '–∫–∞—Ç–µ–≥–æ—Ä–∏—è': drug.get('–∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            })
    
    print(f"–í—Å–µ–≥–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤: {len(relevant_drugs)}")
    
    for drug_info in relevant_drugs:
        print(f"‚úÖ {drug_info['–Ω–∞–∑–≤–∞–Ω–∏–µ']} ({drug_info['–∫–∞—Ç–µ–≥–æ—Ä–∏—è']}): {drug_info['–ø–æ–∫–∞–∑–∞–Ω–∏—è']}")

def test_search_with_relevance():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏"""
    
    print("\n–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê –° –ê–ù–ê–õ–ò–ó–û–ú –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò")
    print("=" * 60)
    
    db = MedicalVectorDB()
    
    test_cases = [
        ("–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å", ["–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª", "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω", "–ê—Å–ø–∏—Ä–∏–Ω", "–ù–æ—à–ø–∞"]),
        ("—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", ["–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª", "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω", "–ê—Å–ø–∏—Ä–∏–Ω"]),
        ("–∞–ª–ª–µ—Ä–≥–∏—è", ["–¶–µ—Ç–∏—Ä–∏–∑–∏–Ω", "–õ–æ—Ä–∞—Ç–∞–¥–∏–Ω"]),
        ("–≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ", ["–ò–±—É–ø—Ä–æ—Ñ–µ–Ω", "–ö–µ—Ç–æ—Ä–æ–ª–∞–∫"]),
    ]
    
    for query, expected_drugs in test_cases:
        print(f"\n–ó–∞–ø—Ä–æ—Å: '{query}'")
        print(f"   –û–∂–∏–¥–∞–µ–º—ã–µ: {expected_drugs}")
        print("-" * 40)
        
        results = db.search_drugs(query, n_results=8)
        found_drugs = [result['–ª–µ–∫–∞—Ä—Å—Ç–≤–æ'] for result in results]
        
        matches = [drug for drug in expected_drugs if drug in found_drugs]
        missing = [drug for drug in expected_drugs if drug not in found_drugs]
        
        print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print(f"   –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: {matches} ({len(matches)}/{len(expected_drugs)})")
        
        if missing:
            print(f"–ù–µ –Ω–∞–π–¥–µ–Ω—ã: {missing}")
        
        for i, result in enumerate(results[:5], 1):
            drug = result['–ø–æ–ª–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ']
            is_expected = "‚úÖ" if result['–ª–µ–∫–∞—Ä—Å—Ç–≤–æ'] in expected_drugs else "  "
            print(f"   {is_expected} {i}. {result['–ª–µ–∫–∞—Ä—Å—Ç–≤–æ']} (—Å—Ö–æ–∂–µ—Å—Ç—å: {result['—Å—Ö–æ–∂–µ—Å—Ç—å']})")

def debug_specific_drugs():
    """–û—Ç–ª–∞–¥–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤"""
    
    print("\nüîß –û–¢–õ–ê–î–ö–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –õ–ï–ö–ê–†–°–¢–í")
    print("=" * 60)
    
    db = MedicalVectorDB()
    
    target_drugs = ["–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª", "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω", "–¶–µ—Ç–∏—Ä–∏–∑–∏–Ω", "–ù–æ—à–ø–∞"]
    
    for drug_name in target_drugs:
        results = db.search_drugs(drug_name, n_results=1)
        if results:
            drug = results[0]['–ø–æ–ª–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ']
            print(f"\n{drug['–Ω–∞–∑–≤–∞–Ω–∏–µ']}:")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {drug.get('–∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}")
            print(f"   –ü–æ–∫–∞–∑–∞–Ω–∏—è: {drug['–ø–æ–∫–∞–∑–∞–Ω–∏—è']}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {drug['–æ–ø–∏—Å–∞–Ω–∏–µ']}")

if __name__ == "__main__":
    analyze_drug_relevance()
    test_search_with_relevance() 
    debug_specific_drugs()