import pytest

class TestDiagnostic:
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–ª–µ–º –ø–æ–∏—Å–∫–∞"""
    
    def test_drug_categories_analysis(self, medical_db):
        """–ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ª–µ–∫–∞—Ä—Å—Ç–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        categories = {}
        
        for drug in medical_db.drugs_data:
            category = drug.get('–∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            if category not in categories:
                categories[category] = []
            categories[category].append(drug['–Ω–∞–∑–≤–∞–Ω–∏–µ'])
        
        print("\n–ê–ù–ê–õ–ò–ó –ö–ê–¢–ï–ì–û–†–ò–ô –õ–ï–ö–ê–†–°–¢–í:")
        for category, drugs in categories.items():
            print(f"   {category}: {', '.join(drugs)}")
    
    def test_search_debug(self, medical_db):
        """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        problematic_queries = [
            "–∫—Ä–∞–ø–∏–≤–Ω–∏—Ü–∞",  # –î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–µ
            "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω",   # –î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ —Å–∞–º —Å–µ–±—è
            "–ö–µ—Ç–æ—Ä–æ–ª–∞–∫",   # –î–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ —Å–∞–º —Å–µ–±—è
        ]
        
        for query in problematic_queries:
            print(f"\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –∑–∞–ø—Ä–æ—Å–∞: '{query}'")
            results = medical_db.search_drugs(query, n_results=5)
            
            print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            for i, result in enumerate(results, 1):
                drug = result['–ø–æ–ª–Ω—ã–µ_–¥–∞–Ω–Ω—ã–µ']
                print(f"   {i}. {result['–ª–µ–∫–∞—Ä—Å—Ç–≤–æ']} (—Å—Ö–æ–∂–µ—Å—Ç—å: {result['—Å—Ö–æ–∂–µ—Å—Ç—å']})")
                print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {drug.get('–∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}")
                print(f"      –ü–æ–∫–∞–∑–∞–Ω–∏—è: {', '.join(drug['–ø–æ–∫–∞–∑–∞–Ω–∏—è'][:2])}")
    
    def test_category_filter_debug(self, medical_db):
        """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
        test_cases = [
            ("–∞–Ω–∞–ª—å–≥–µ—Ç–∏–∫", "–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª"),
            ("–ø—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ", "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω"), 
            ("–∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω–æ–µ", "–¶–µ—Ç–∏—Ä–∏–∑–∏–Ω"),
        ]
        
        for category, expected_drug in test_cases:
            print(f"\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: '{category}'")
            results = medical_db.search_drugs("", category_filter=category, n_results=10)
            
            found_drugs = [result['–ª–µ–∫–∞—Ä—Å—Ç–≤–æ'] for result in results]
            print(f"   –ù–∞–π–¥–µ–Ω–æ: {found_drugs}")
            
            if expected_drug in found_drugs:
                print(f"–û–∂–∏–¥–∞–µ–º—ã–π '{expected_drug}' –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"–û–∂–∏–¥–∞–µ–º—ã–π '{expected_drug}' –Ω–µ –Ω–∞–π–¥–µ–Ω")